@import "../common/_mixins.less";

/*
    This generates size classes that can be used with the Grid component.
    The classes are only active from a specified breakpoint.

    For example if you apply .u-md-size1of2 to an element
    it will get width 50% when the screen-width is larger than medium width (@bpMedium).

    Adding another class of .u-lg-size1of4 would mean the element gets 25% when @bpLarge breakpoint gets active.
*/
.utilsSize(~'');
.mediaQueryUtils(@prefixXSmall, @bpXSmall);
.mediaQueryUtils(@prefixSmall, @bpSmall);
.mediaQueryUtils(@prefixMedium, @bpMedium);
.mediaQueryUtils(@prefixLarge, @bpLarge);
.mediaQueryUtils(@prefixXLarge, @bpXLarge);
//.mediaQueryUtils(~'print-', ~'print');

.utilsSize(@prefix: ~'') {
    /* Intrinsic widths
   ========================================================================== */
    /**
     * Make an element shrink wrap its content.
     */
    .u-@{prefix}sizeFit,
    .u-@{prefix}sizeFitAlt {
        display: block !important;
        float: left !important;
        width: auto !important;
    }

    .u-@{prefix}sizeFitAlt {
        float: right !important;
    }
    /**
     * Make an element fill the remaining space.
     * N.B. This will hide overflow.
     */
    .u-@{prefix}sizeFill {
        display: block !important;
        overflow: hidden !important;
        width: auto !important;
    }
    /**
     * An alternative method to make an element fill the remaining space.
     * N.B. Do not use if child elements might be wider than the remaining space.
     * In Chrome, Safari, and Firefox it results in undesired layout.
     */
    .u-@{prefix}sizeFillAlt {
        display: table-cell !important;
        max-width: 100% !important;
        width: 10000px !important;
    }
    /**
     * Make an element the width of its parent.
     */
    .u-@{prefix}sizeFull {
        box-sizing: border-box !important;
        display: block !important;
        width: 100% !important;
    }
    /* Proportional widths
   ========================================================================== */
    /**
     * Specify the proportional width of an object.
     * Intentional redundancy build into each set of unit classes.
     * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
     */
    .u-@{prefix}size1of12 {
        width: (100% * 1 / 12) !important;
    }

    .u-@{prefix}size1of10 {
        width: 10% !important;
    }

    .u-@{prefix}size1of8 {
        width: 12.5% !important;
    }

    .u-@{prefix}size1of6,
    .u-@{prefix}size2of12 {
        width: (100% * 1 / 6) !important;
    }

    .u-@{prefix}size1of5,
    .u-@{prefix}size2of10 {
        width: 20% !important;
    }

    .u-@{prefix}size1of4,
    .u-@{prefix}size2of8,
    .u-@{prefix}size3of12 {
        width: 25% !important;
    }

    .u-@{prefix}size3of10 {
        width: 30% !important;
    }

    .u-@{prefix}size1of3,
    .u-@{prefix}size2of6,
    .u-@{prefix}size4of12 {
        width: (100% * 1 / 3) !important;
    }

    .u-@{prefix}size3of8 {
        width: 37.5% !important;
    }

    .u-@{prefix}size2of5,
    .u-@{prefix}size4of10 {
        width: 40% !important;
    }

    .u-@{prefix}size5of12 {
        width: (100% * 5 / 12) !important;
    }

    .u-@{prefix}size1of2,
    .u-@{prefix}size2of4,
    .u-@{prefix}size3of6,
    .u-@{prefix}size4of8,
    .u-@{prefix}size5of10,
    .u-@{prefix}size6of12 {
        width: 50% !important;
    }

    .u-@{prefix}size7of12 {
        width: (100% * 7 / 12) !important;
    }

    .u-@{prefix}size3of5,
    .u-@{prefix}size6of10 {
        width: 60% !important;
    }

    .u-@{prefix}size5of8 {
        width: 62.5% !important;
    }

    .u-@{prefix}size2of3,
    .u-@{prefix}size4of6,
    .u-@{prefix}size8of12 {
        width: (100% * 2 / 3) !important;
    }

    .u-@{prefix}size7of10 {
        width: 70% !important;
    }

    .u-@{prefix}size3of4,
    .u-@{prefix}size6of8,
    .u-@{prefix}size9of12 {
        width: 75% !important;
    }

    .u-@{prefix}size4of5,
    .u-@{prefix}size8of10 {
        width: 80% !important;
    }

    .u-@{prefix}size5of6,
    .u-@{prefix}size10of12 {
        width: (100% * 5 / 6) !important;
    }

    .u-@{prefix}size7of8 {
        width: 87.5% !important;
    }

    .u-@{prefix}size9of10 {
        width: 90% !important;
    }

    .u-@{prefix}size11of12 {
        width: (100% * 11 / 12) !important;
    }
}

.mediaQueryUtils(@prefix: ~'', @breakpoint) {
    @media @breakpoint {
        .utilsSize(@prefix);
    }
}

.u-sizeMax60 {
    max-width: 60%;
}

.u-sizeMax250 {
    max-width: 250px;
}
.u-sizeMax1of2 {
    max-width: 50%;

}