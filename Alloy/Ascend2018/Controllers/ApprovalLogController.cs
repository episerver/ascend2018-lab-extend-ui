using System.Linq;
using System.Threading.Tasks;
using System.Web.Mvc;
using Ascend2018.Models.ViewModels;
using EPiServer.Core;
using EPiServer.DataAbstraction.Activities;
using EPiServer.Framework.Web.Mvc;
using EPiServer.Web.Mvc;

namespace Ascend2018.Controllers
{
    /// <summary>
    /// Controller for the Approval Log view, which is a convenient way for users to easily see the auditing log
    /// generated by using Content Approval.
    /// </summary>
    [RequireClientResources]
    [AuthorizeContent]
    public class ApprovalLogController : Controller
    {
        private static IActivityQueryService _activityQueryService;

        public ApprovalLogController(IActivityQueryService activityQueryService)
        {
            _activityQueryService = activityQueryService;
        }

        /// <summary>
        /// Gets a list of log activities related to the selected content and it's Content Approval audit log.
        /// </summary>
        [Authorize(Roles = "WebEditors, WebAdmins, Administrators")]
        public async Task<ActionResult> Index(ContentReference id)
        {
            id = id.ToReferenceWithoutVersion();

            var activities = await _activityQueryService.ListActivitiesAsync(new ActivityQuery
            {
                ActivityType = ActivityType.ContentApproval,
                Order = ActivityOrder.LatestFirst,
                IncludeArchived = true,
                MaxResults = 50000
            }).ConfigureAwait(false);
                
            var contentApprovalActivities = activities
                .OfType<ContentApprovalActivity>()
                .Where(x => x.ContentLink.ToReferenceWithoutVersion() == id)
                .ToList();

            var contentActivityViewModel = new ContentActivityViewModel { Activities = contentApprovalActivities };

            return View(contentActivityViewModel);
        }
    }
}
